import{_ as e,E as n,c as p,J as a,m as i,a as s,w as l,a4 as t,o as r}from"./chunks/framework.K9vKjHgL.js";const T=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/ts/typeScript.md","filePath":"frontend/ts/typeScript.md"}'),d={name:"frontend/ts/typeScript.md"},F=t("",10),y=i("p",null,[s("名称使用大写开头，或者以"),i("code",null,"I"),s("开头")],-1),g=i("p",null,[s("使用"),i("code",null,"?"),s("说明属性是可选的。")],-1),o=i("code",null,"[propName: string]: any",-1),c=i("strong",null,"任意属性",-1),E=i("code",null,"any",-1),C=i("code",null,"string",-1),u=i("code",null,"string",-1),f=i("p",null,[i("code",null,"readonly"),s("定义属性只读。即初始化赋值，后面不可改。")],-1),D=t("",5),b=t("",59);function A(m,v,q,B,_,P){const k=n("Banner"),h=n("font");return r(),p("div",null,[a(k),F,i("blockquote",null,[y,g,i("p",null,[o,s("指定该接口有"),a(h,{color:"red"},{default:l(()=>[c]),_:1}),s("，这个"),E,s("说明任意属性可以是任意类型。如果换成"),C,s("，则该接口下，必选、可选的属性都必须是"),u,s("类型。")]),f]),D,a(h,{color:"red"},{default:l(()=>[s("需要注意的是，可选参数必须接在必需参数后面。换句话说，**可选参数后面不允许再出现必需参数了**")]),_:1}),b])}const S=e(d,[["render",A]]);export{T as __pageData,S as default};
