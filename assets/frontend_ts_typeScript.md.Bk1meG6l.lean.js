import{_ as l,E as k,c as e,m as i,a as s,J as h,w as n,a4 as a,o as p}from"./chunks/framework.K9vKjHgL.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/ts/typeScript.md","filePath":"frontend/ts/typeScript.md"}'),r={name:"frontend/ts/typeScript.md"},d=a("",10),F=i("p",null,[s("名称使用大写开头，或者以"),i("code",null,"I"),s("开头")],-1),y=i("p",null,[s("使用"),i("code",null,"?"),s("说明属性是可选的。")],-1),g=i("code",null,"[propName: string]: any",-1),o=i("strong",null,"任意属性",-1),c=i("code",null,"any",-1),E=i("code",null,"string",-1),C=i("code",null,"string",-1),u=i("p",null,[i("code",null,"readonly"),s("定义属性只读。即初始化赋值，后面不可改。")],-1),f=a("",5),D=a("",59);function b(A,m,v,q,B,_){const t=k("font");return p(),e("div",null,[d,i("blockquote",null,[F,y,i("p",null,[g,s("指定该接口有"),h(t,{color:"red"},{default:n(()=>[o]),_:1}),s("，这个"),c,s("说明任意属性可以是任意类型。如果换成"),E,s("，则该接口下，必选、可选的属性都必须是"),C,s("类型。")]),u]),f,h(t,{color:"red"},{default:n(()=>[s("需要注意的是，可选参数必须接在必需参数后面。换句话说，**可选参数后面不允许再出现必需参数了**")]),_:1}),D])}const T=l(r,[["render",b]]);export{x as __pageData,T as default};
