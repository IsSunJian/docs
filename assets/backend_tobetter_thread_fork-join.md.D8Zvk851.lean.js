import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.-JfgED0h.js";const h="/docs/assets/fork-join-ba0c0e3f-dc9b-445d-874a-5878503a98f7.C2BmL2KG.png",t="/docs/assets/fork-join-819f4ad9-25ce-4e7e-a1d7-e36a70e584a4.BMESfZYd.png",k="/docs/assets/fork-join-8e03485d-efe0-4edf-8516-a9b10dea6e7f.BeCO3_ye.png",C=JSON.parse('{"title":"深入理解Java并发编程之Fork/Join框架","description":"深入理解Java并发编程之Fork/Join框架","frontmatter":{"title":"深入理解Java并发编程之Fork/Join框架","shortTitle":"Fork/Join框架","description":"深入理解Java并发编程之Fork/Join框架","category":["Java核心"],"tag":["Java并发编程"],"head":[["meta",{"name":"keywords","content":"Java,并发编程,多线程,Thread,ForkJoin"}]]},"headers":[],"relativePath":"backend/tobetter/thread/fork-join.md","filePath":"backend/tobetter/thread/fork-join.md"}'),l={name:"backend/tobetter/thread/fork-join.md"},p=n("",65),e=[p];function r(F,d,g,o,y,c){return a(),i("div",null,e)}const f=s(l,[["render",r]]);export{C as __pageData,f as default};
