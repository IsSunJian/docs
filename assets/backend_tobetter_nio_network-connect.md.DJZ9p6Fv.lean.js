import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.-JfgED0h.js";const h="/docs/assets/network-connect-20230407124624.BP5MzXnf.png",t="/docs/assets/network-connect-20230407130621.CkVWlXUy.png",k="/docs/assets/network-connect-20230407131553.DCCbhIXp.png",l="/docs/assets/network-connect-20230407161351.DheW2sZr.png",e="/docs/assets/network-connect-20230407164326.CmRXvAYZ.png",p="/docs/assets/network-connect-20230407164913.CNxguELX.png",F="/docs/assets/network-connect-20230407165110.rEP_inNX.png",r="/docs/assets/network-connect-20230407180853.Ccar-4qj.png",d="/docs/assets/network-connect-20230407181717.6dt6zwKe.png",y="/docs/assets/network-connect-20230407181906.DNpk-2TS.png",v=JSON.parse('{"title":"Java NIO 网络编程实践聊天室：从入门到精通","description":"Java NIO 网络编程实践涉及 SocketChannel、ServerSocketChannel、阻塞与非阻塞模式、Scatter 和 Gather 数据传输、异步套接字通道（AsynchronousSocketChannel 和 AsynchronousServerSocketChannel），以及简单聊天室实现。NIO 提供了高效、灵活且可扩展的 I/O 处理方式，适用于大型应用程序和高并发场景。","frontmatter":{"title":"Java NIO 网络编程实践聊天室：从入门到精通","shortTitle":"NIO 实现简易版聊天室","category":["Java核心"],"tag":["Java NIO"],"description":"Java NIO 网络编程实践涉及 SocketChannel、ServerSocketChannel、阻塞与非阻塞模式、Scatter 和 Gather 数据传输、异步套接字通道（AsynchronousSocketChannel 和 AsynchronousServerSocketChannel），以及简单聊天室实现。NIO 提供了高效、灵活且可扩展的 I/O 处理方式，适用于大型应用程序和高并发场景。","author":"沉默王二","head":[["meta",{"name":"keywords","content":"java,nio,网络编程,SocketChannel,ServerSocketChannel,AsynchronousSocketChannel,AsynchronousServerSocketChannel,聊天室"}]]},"headers":[],"relativePath":"backend/tobetter/nio/network-connect.md","filePath":"backend/tobetter/nio/network-connect.md"}'),g={name:"backend/tobetter/nio/network-connect.md"},E=n("",127),c=[E];function o(C,f,D,A,u,B){return a(),i("div",null,c)}const b=s(g,[["render",o]]);export{v as __pageData,b as default};
