import{_ as i,c as s,o as t,a4 as a}from"./chunks/framework.-JfgED0h.js";const u=JSON.parse('{"title":"前端以form-data方式/raw方式发送post请求的区别","description":"","frontmatter":{},"headers":[],"relativePath":"problem/java/请求.md","filePath":"problem/java/请求.md"}'),e={name:"problem/java/请求.md"},h=a('<h1 id="前端以form-data方式-raw方式发送post请求的区别" tabindex="-1">前端以form-data方式/raw方式发送post请求的区别 <a class="header-anchor" href="#前端以form-data方式-raw方式发送post请求的区别" aria-label="Permalink to &quot;前端以form-data方式/raw方式发送post请求的区别&quot;">​</a></h1><p><strong>POST请求</strong><strong>@RequestParam：</strong> ① 用来处理（前端）Content-Type: 为 application/x-www-form-urlencoded或者form-data编码的内容 ② 该注解有两个属性： value、required； value用来指定要传入值的id名称，required用来指示参数是否必须绑定； 注意这里Headers里不能以application/json作为Content-type，否则后台也接收不到请求</p><p><img src="https://upload-images.jianshu.io/upload_images/1461379-3556d968ade1d892.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000" alt="img"></p><p>采用form-data方式，Headers里应该为空.png</p><p><img src="https://upload-images.jianshu.io/upload_images/1461379-0443cad84530d0a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/863" alt="img"></p><p>采用form-data方式，Headers里不为空时报错.png</p><p><img src="https://upload-images.jianshu.io/upload_images/1461379-4bca61c990be8380.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000" alt="img"></p><p>采用form-data方式发送post请求.png</p><p>Control中方法</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">    @</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">RequestMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#62E884;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">/del</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#62E884;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">method</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#62E884;"> RequestMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">POST</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)    public ResponseObj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">Boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> delete</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(@RequestParam String enterpriseId,                                       @RequestParam String operator,                                       @RequestParam String status) {        int i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> enterpriseBaseMapper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">deleteByPrimaryKey</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(enterpriseId);        </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)            </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;--shiki-light-font-weight:inherit;--shiki-dark-font-weight:bold;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> ResponseObj</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">Boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&gt;(</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, RetCode.</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">SUCCESS</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);        </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;--shiki-light-font-weight:inherit;--shiki-dark-font-weight:bold;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> ResponseObj</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">Boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&gt;(</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, RetCode.</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">FAIL</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);    }</span></span></code></pre></div><p><strong>@RequestBody</strong> ① 该注解常用来处理Content-Type: 不是application/x-www-form-urlencoded编码的内容，例如application/json, application/xml等； 前端规定的是raw方式，那么就需要使用@RequestBody接收参数，注意这里Headers里需要以application/json作为Content-type</p><p><img src="https://upload-images.jianshu.io/upload_images/1461379-c653a6e316d3bb95.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/927" alt="img"></p><p>以raw方式发送post请求.png</p><p>使用如下代码可以正常进入断点</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">RequestMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#62E884;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">/del</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#62E884;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">method</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#62E884;"> RequestMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">POST</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)    public ResponseObj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">Boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> delete</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">/*@RequestParam String enterpriseId,                                       @RequestParam String operator,                                       @RequestParam String status*/</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">                                       @RequestBody Map</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">String,Object</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> map) {        String enterpriseId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (String) map.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">enterpriseId</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);        String operator </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (String) map.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">operator</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);        String status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (String) map.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">status</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);        int i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> enterpriseBaseMapper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">deleteByPrimaryKey</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(enterpriseId);        </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)            </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;--shiki-light-font-weight:inherit;--shiki-dark-font-weight:bold;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> ResponseObj</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">Boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&gt;(</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, RetCode.</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">SUCCESS</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);        </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;--shiki-light-font-weight:inherit;--shiki-dark-font-weight:bold;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> ResponseObj</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">Boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&gt;(</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, RetCode.</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">FAIL</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);    }</span></span></code></pre></div><p>那么以后尽量使用@RequestBody Map&lt;String,Object&gt; map这种形式 <a href="https://link.jianshu.com/?t=http://blog.csdn.net/truong/article/details/28097837" target="_blank" rel="noreferrer">@RequestParam @RequestBody @PathVariable 等参数绑定注解详解</a></p><p><strong>form-data、x-www-form-urlencoded、raw、binary类型</strong></p><p>一：form-data</p><p>就是http请求中的multipart/form-data,它会将表单的数据处理为一条消息，以标签为单元，用分隔符分开。既可以上传键值对，也可以上传文件。当上传的字段是文件时，会有Content-Type来说明文件类型；content-disposition，用来说明字段的一些信息；</p><p>由于有boundary隔离，所以multipart/form-data既可以上传文件，也可以上传键值对，它采用了键值对的方式，所以可以上传多个文件。</p><p>二：x-www-form-urlencoded</p><p>application/x-www-from-urlencoded,会将表单内的数据转换为键值对,如：name=leyangjun&amp;age =28&amp;work＝meituan</p><p>三：raw</p><p>可上传任意格式的文本，可以上传text、json、xml、html等各种文本类型 四：binary</p><p>​ 等同于Content-Type:application/octet-stream，只可上传二进制数据，通常用来上传文件，由于没有键值，所以一次只能上传一个文件。</p><p>注意：</p><p>form-data与x-www-form-urlencoded不同之处在于（multipart/form-data：既可以上传文件等二进制数据，也可以上传表单键值对，只是最后会转化为一条信息； x-www-form-urlencoded：只能上传键值对，且键值对都是间隔分开。）</p><p>打印请求日志, 表单和body的区别</p><p>After request [uri=/managerConfig/modifyConfigAboutAppUserLogin;payload=id=3®istGivenPrice=0.00&amp;openRegistry=true&amp;visibleItemNotLogin=false&amp;defaultAppViewClassifyLevel=2]</p><p>After request [uri=/item/createItem;payload={&quot;name&quot;:&quot;???&quot;,&quot;pictureUrl&quot;:&quot;<a href="https://saturn-titan.oss-cn-qingdao.aliyuncs.com/demo/item/1546513139886pB7G82X.jpeg%22,%22itemBrand%22:%22%22,%22describe%22:%22" target="_blank" rel="noreferrer">https://saturn-titan.oss-cn-qingdao.aliyuncs.com/demo/item/1546513139886pB7G82X.jpeg&quot;,&quot;itemBrand&quot;:&quot;&quot;,&quot;describe&quot;:&quot;</a>??&quot;,&quot;itemClassifyId&quot;:5,&quot;packageType&quot;:&quot;BULK&quot;,&quot;suplyUnit&quot;:&quot;?&quot;,&quot;warningAmount&quot;:0,&quot;tags&quot;:&quot;&quot;,&quot;priceGroups&quot;:[{&quot;name&quot;:&quot;???&quot;,&quot;optionalPrice&quot;:&quot;0&quot;,&quot;priceType&quot;:&quot;FLOW&quot;,&quot;priceGroupId&quot;:1,&quot;promotionOptionalPrice&quot;:&quot;&quot;,&quot;promotionSwitch&quot;:false}],&quot;specification&quot;:{&quot;itemUnit&quot;:&quot;?&quot;,&quot;limitedPerchase&quot;:999,&quot;minExpectedProfitmargin&quot;:10,&quot;maxExpectedProfitmargin&quot;:50,&quot;salePrice&quot;:11,&quot;status&quot;:&quot;OFF_SALE&quot;,&quot;unitWeight&quot;:11,&quot;basicUnit&quot;:&quot;?&quot;}}]</p>',30),n=[h];function p(k,l,r,o,d,g){return t(),s("div",null,n)}const y=i(e,[["render",p]]);export{u as __pageData,y as default};
