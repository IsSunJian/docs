import{_ as i,c as s,o as a,a4 as t}from"./chunks/framework.-JfgED0h.js";const o=JSON.parse('{"title":"基础操作","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/ts/ch1.md","filePath":"frontend/ts/ch1.md"}'),h={name:"frontend/ts/ch1.md"},n=t(`<h1 id="基础操作" tabindex="-1">基础操作 <a class="header-anchor" href="#基础操作" aria-label="Permalink to &quot;基础操作&quot;">​</a></h1><h2 id="null-与-undefined" tabindex="-1">null 与 undefined <a class="header-anchor" href="#null-与-undefined" aria-label="Permalink to &quot;null 与 undefined&quot;">​</a></h2><p>在 JavaScript 中：</p><ul><li>null：这里有值，但是个空值</li><li>undefined：这里没有值</li></ul><p>在 TypeScript 中：</p><ul><li>null 与 undefined 类型都是有具体意义的类型</li></ul><blockquote><p>在没有开启 <code>strictNullChecks</code> 检查的情况下，会被视作其他类型的子类型。</p></blockquote><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> ans1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 仅在关闭 strictNullChecks 时成立，下同</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> ans2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span></code></pre></div><h2 id="void-类型" tabindex="-1">void 类型 <a class="header-anchor" href="#void-类型" aria-label="Permalink to &quot;void 类型&quot;">​</a></h2><p>在 TypeScript 中，<code>undefined</code> 类型是一个实际的、有意义的类型值，而 <code>void</code> 代表空的、没有意义的类型值。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 没有 return 用 void</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> foo</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> { }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 有 return 但是没有返回值，用 undefined</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> bar</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span></code></pre></div><h2 id="never-类型" tabindex="-1">never 类型 <a class="header-anchor" href="#never-类型" aria-label="Permalink to &quot;never 类型&quot;">​</a></h2><p>never 类型<strong>不包含任何</strong>的类型，啥也没有，在联合类型中会被移除。</p><p>never 是整个类型系统层级中最底层的类型，即 <code>Bottom Type</code>。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// never 类型使用</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> strOrNumOrBool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> strOrNumOrBool </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">str!</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> strOrNumOrBool </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">number</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">num!</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> strOrNumOrBool </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">boolean</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">bool!</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">  // 未处理的新类型，都会走到 never 进行报错</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> _exhaustiveCheck</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> never</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> strOrNumOrBool;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">  throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;--shiki-light-font-weight:inherit;--shiki-dark-font-weight:bold;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">\`Unknown input type: </span><span style="--shiki-light:#032F62;--shiki-dark:#F286C4;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">_exhaustiveCheck</span><span style="--shiki-light:#032F62;--shiki-dark:#F286C4;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span></code></pre></div><h2 id="any-与-unknown" tabindex="-1">any 与 unknown <a class="header-anchor" href="#any-与-unknown" aria-label="Permalink to &quot;any 与 unknown&quot;">​</a></h2><p>any 与 unknown 的本质是类型系统中的顶级类型，即 <code>Top Type</code>。</p><p>unknown 类型<strong>可以赋值为</strong>任意其它类型，但它<strong>只能赋值给</strong> any 或者 unknown 类型。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// any unknown</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> anyVar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> any</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">anyVar.foo.bar.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">baz</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> unknownVar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">unknownVar.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">foo</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 对象的类型为 &quot;unknown&quot;。ts(2571)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(unknownVar </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">foo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {} }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">foo</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 当 unknown 类型，进行属性访问，需要类型断言</span></span></code></pre></div><p>unknown 使用会比较麻烦，需要一堆的类型断言。</p><h2 id="unique-symbol" tabindex="-1">unique symbol <a class="header-anchor" href="#unique-symbol" aria-label="Permalink to &quot;unique symbol&quot;">​</a></h2><p>在 TypeScript 中，使用 <code>unique symbol</code>（symbol 类型的子类型）确保独一无二。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// unique symbol</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> uniqueSymbolFoo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> unique</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> symbol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">Chocolate</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 不能将类型“typeof uniqueSymbolFoo”分配给类型“typeof uniqueSymbolBar”。ts(2322)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> uniqueSymbolBar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> unique</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> symbol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> uniqueSymbolFoo</span></span></code></pre></div><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 复用 unique symbol 类型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> uniqueSymbolA</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> unique</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> uniqueSymbolB</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> uniqueSymbolA </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> uniqueSymbolA</span></span></code></pre></div><h2 id="枚举" tabindex="-1">枚举 <a class="header-anchor" href="#枚举" aria-label="Permalink to &quot;枚举&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 枚举</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> IEnum</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;">    Home_Page_Url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">https://yangchaoyi.vip/</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;">    Blog_Page_Url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">https://blog.yangchaoyi.vip/</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;">    Num1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 1999</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;">    Num2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> IEnum.Num2;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(num); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 2000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(IEnum[</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">1999</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// Num1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 常量枚举</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> IEnum2</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;">    Val1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 99</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;">    Val2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> val1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> IEnum2.Val1;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(val1); </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 99</span></span></code></pre></div><h2 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Func</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> number</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> foo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Func</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> name.</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;">length</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span></code></pre></div><h2 id="可选与只读" tabindex="-1">可选与只读 <a class="header-anchor" href="#可选与只读" aria-label="Permalink to &quot;可选与只读&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 可选与只读属性</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> IProps</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">  readonly</span><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">  age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">  male</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">  func</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> IProps</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">Chocolate</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">  age</span><span style="--shiki-light:#24292E;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 18</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">  male</span><span style="--shiki-light:#24292E;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">  // 无需实现 func 也是合法的</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">obj.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">HearLing</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 无法分配到 &quot;name&quot; ，因为它是只读属性。ts(2540)</span></span></code></pre></div><h2 id="非空断言" tabindex="-1">非空断言 <a class="header-anchor" href="#非空断言" aria-label="Permalink to &quot;非空断言&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 非空断言</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> foo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">  func</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> ({</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">    prop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">foo.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">func</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">().prop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">toFixed</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 等价于</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">((foo.func </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> ({</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">  prop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}))().prop </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">as</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">toFixed</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">();</span></span></code></pre></div><h2 id="object、object-以及" tabindex="-1">object、Object 以及 <a class="header-anchor" href="#object、object-以及" aria-label="Permalink to &quot;object、Object 以及 { }&quot;">​</a></h2><p>记住以下几点规则：</p><ul><li><strong>不使用</strong> Object 以及类似的装箱类</li></ul><blockquote><p>object 的引入就是为了解决对 Object 类型的错误使用，它代表所有非原始类型的类型，即数组、对象与函数类型。</p></blockquote><ul><li>当不确定某个变量的具体类型，但能够确定它不是原始类型，可以使用 object。可以进一步区分，例如用 <code>Record&lt;string, unknown&gt;</code> 或 <code>Record&lt;string, any&gt;</code> 表示对象，<code>unknown[]</code> 或 <code>any[]</code> 表示数组，<code>(...args: any[]) =&gt; any</code> 表示函数。</li><li><code>{}</code> 意味着任何非 <code>null / undefined</code> 的值，尽量避免使用。</li></ul><h2 id="字面量类型" tabindex="-1">字面量类型 <a class="header-anchor" href="#字面量类型" aria-label="Permalink to &quot;字面量类型&quot;">​</a></h2><p>字面量类型主要包括<strong>字符串字面量类型、数字字面量类型、布尔字面量类型</strong>和<strong>对象字面量类型</strong>。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 字面量类型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">Chocolate</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">Chocolate</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 1999</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 1999</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> true</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span></code></pre></div><blockquote><p>字面量类型要求的是值级别的字面量一致，因此比原始值类型更精确。 对象字面量类型就是一个对象类型的值，对象的值都为字面量值，不常用。</p></blockquote><p>通常与联合类型一起使用：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 字面量与联合类型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Iprops</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">    bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> true</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">    num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">    str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">RNG</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">EDG</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">TES</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">JDG</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span></code></pre></div><p>let 与 const 使用区别：</p><ul><li>let 只需推导对应的从属类型即可</li><li>const 声明的原始类型变量将不再可变，因此类型会收窄到最精确的字面量类型（但对象类型变量仍可变）</li></ul><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// let 与 const</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> userName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">Chocolate</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// let userName: string</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> userAge</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// const userAge: 20</span></span></code></pre></div><h2 id="联合类型" tabindex="-1">联合类型 <a class="header-anchor" href="#联合类型" aria-label="Permalink to &quot;联合类型&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 联合类型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Iprops</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">    props</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> true</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 1999</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {}) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span></code></pre></div><blockquote><p>联合类型中的函数要用 <code>()</code>包裹一下，因为函数并不存在字面量类型。</p></blockquote><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 多个对象类型的联合，实现手动的互斥属性</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> IUser</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">    user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    |</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">        vip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">        expires</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    |</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">        vip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">        promotion</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> userInfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> IUser</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (userInfo.user.vip) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(userInfo.user.expires);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span></code></pre></div><h2 id="索引类型" tabindex="-1">索引类型 <a class="header-anchor" href="#索引类型" aria-label="Permalink to &quot;索引类型&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 索引类型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> AllStringTypes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">  [</span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> foo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> AllStringTypes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">  &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">aaa</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">123</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">  1999</span><span style="--shiki-light:#24292E;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">Chocolate</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">  [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">sss</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)]</span><span style="--shiki-light:#24292E;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">symbol</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Foo</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">  propA</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">  propB</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">  propC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 索引类型查询</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Keys</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> keyof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> AllStringTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// string | number</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 索引类型访问</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> PropAType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Foo</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">propA</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// number</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> PropBType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Foo</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">propB</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// boolean</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> PropTypeUnion</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Foo</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">keyof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Foo</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// string | number | boolean</span></span></code></pre></div><h2 id="type-与-interface" tabindex="-1">type 与 interface <a class="header-anchor" href="#type-与-interface" aria-label="Permalink to &quot;type 与 interface&quot;">​</a></h2><p>推荐做法：</p><p>tinterface 用来描述对象、类的结构。</p><p>type 将一个函数签名、一组联合类型、一个工具类型等等抽离成一个完整独立的类型。</p><blockquote><p>不过大部分场景下接口结构都可以被类型别名所取代，简而言之，能用就行。</p></blockquote><h2 id="类型查询操作符-typeof" tabindex="-1">类型查询操作符 typeof <a class="header-anchor" href="#类型查询操作符-typeof" aria-label="Permalink to &quot;类型查询操作符 typeof&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 类型查询操作符 typeof</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">Chocolate</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> { name</span><span style="--shiki-light:#24292E;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">Chocolate</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> nullVar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> undefinedVar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> func</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">input</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> input.</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> &gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> str; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// &quot;Chocolate&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> obj; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// { name: string; }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> nullVar; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// null</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Undefined</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> typeof</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// undefined</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Func</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> func; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// (input: string) =&gt; boolean</span></span></code></pre></div><h2 id="类型守卫" tabindex="-1">类型守卫 <a class="header-anchor" href="#类型守卫" aria-label="Permalink to &quot;类型守卫&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 类型守卫</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Falsy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> false</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> isFalsy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> is</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Falsy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">val;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 不包括不常用的 symbol 和 bigint</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Primitive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> isPrimitive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> is</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Primitive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">number</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">boolean</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> , </span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">undefined</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">].</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">includes</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> val);</span></span></code></pre></div><h2 id="类型断言守卫" tabindex="-1">类型断言守卫 <a class="header-anchor" href="#类型断言守卫" aria-label="Permalink to &quot;类型断言守卫&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 类型断言守卫</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> any</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">Chocolate</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> assertIsNumber</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> asserts</span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> is</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">!==</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">number</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">        throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;--shiki-light-font-weight:inherit;--shiki-dark-font-weight:bold;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">not a number!</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">assertIsNumber</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(name);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// number 类型！</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">name.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">toFixed</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">();</span></span></code></pre></div><h2 id="infer-关键字" tabindex="-1">infer 关键字 <a class="header-anchor" href="#infer-关键字" aria-label="Permalink to &quot;infer 关键字&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// infer 关键字</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Swap</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> extends</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">[]&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> extends</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> A</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> B</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">B</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">A</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> SwapResult1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Swap</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;[</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]&gt;; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 符合元组结构，首尾元素替换 [2, 1]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> SwapResult2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Swap</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;[</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]&gt;; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 不符合结构，没有发生替换，仍是 [1, 2, 3]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 提取首尾两个</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> ExtractStartAndEnd</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> extends</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">[]&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> extends</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> [</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Start</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">any</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">[],</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> End</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    ?</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">Start</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">End</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 调换首尾两个</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> SwapStartAndEnd</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> extends</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">[]&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> extends</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> [</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Start</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    ...infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Left</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> End</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    ?</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">End</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">...</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">Left</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">Start</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 调换开头两个</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> SwapFirstTwo</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> extends</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">[]&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> extends</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> [</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Start1</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Start2</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    ...infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Left</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    ?</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">Start2</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">Start1</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">...</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">Left</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 提取对象的属性类型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> PropType</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">K</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> extends</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> keyof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> extends</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> { [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">Key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> in</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> K</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> R</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    ?</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> R</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    :</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> never</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> PropTypeResult1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> PropType</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;{ </span><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> }, </span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&gt;; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// string</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> PropTypeResult2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> PropType</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;{ </span><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">; </span><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> }, </span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">age</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&gt;; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// string | number</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 反转键名与键值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> ReverseKeyValue</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&gt;&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> K</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> V</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">?</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> &amp;</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">K</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> never</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> ReverseKeyValueResult1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> ReverseKeyValue</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;{ </span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">key</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">value</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> }&gt;; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// { &quot;value&quot;: &quot;key&quot; }</span></span></code></pre></div><h2 id="上下文类型" tabindex="-1">上下文类型 <a class="header-anchor" href="#上下文类型" aria-label="Permalink to &quot;上下文类型&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 上下文类型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> CustomHandler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> handler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> CustomHandler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">arg1</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">arg2</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 基于位置的类型推导</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> struct</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F6F6F4;">    handler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> CustomHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">struct.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">handler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFB86C;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">age</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> { }; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">//  不能将类型“void”分配给类型“boolean”。</span></span></code></pre></div><h2 id="void-使用" tabindex="-1">void 使用 <a class="header-anchor" href="#void-使用" aria-label="Permalink to &quot;void 使用&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 通过 void 执行立即执行函数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">void</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> iife</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">log!</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">}();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 等价于↓</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> ((</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> iife</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">() { })())</span></span></code></pre></div><h2 id="具名元组" tabindex="-1">具名元组 <a class="header-anchor" href="#具名元组" aria-label="Permalink to &quot;具名元组&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 具名元组</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;"> arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F6F6F4;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F6F6F4;">age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F6F6F4;">male</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">Chocolate</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> TupleLength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> arr.</span><span style="--shiki-light:#005CC5;--shiki-dark:#F6F6F4;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">// 1 | 2 | 3</span></span></code></pre></div>`,71),k=[n];function l(p,e,F,r,y,d){return a(),s("div",null,k)}const E=i(h,[["render",l]]);export{o as __pageData,E as default};
