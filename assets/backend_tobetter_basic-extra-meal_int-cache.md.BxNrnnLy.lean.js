import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.K9vKjHgL.js";const c=JSON.parse('{"title":"Java基本数据类型缓存池剖析（IntegerCache）","description":"本文详细介绍了Java基本数据类型缓存池，包括其工作原理、应用场景以及如何使用缓存池提高内存利用效率。通过本文，您将了解到Java基本数据类型缓存池的优化策略和实践，掌握如何在实际开发中合理使用缓存池，提高程序性能。","frontmatter":{"title":"Java基本数据类型缓存池剖析（IntegerCache）","shortTitle":"Java基本数据类型缓存池","category":["Java核心"],"tag":["Java重要知识点"],"description":"本文详细介绍了Java基本数据类型缓存池，包括其工作原理、应用场景以及如何使用缓存池提高内存利用效率。通过本文，您将了解到Java基本数据类型缓存池的优化策略和实践，掌握如何在实际开发中合理使用缓存池，提高程序性能。","head":[["meta",{"name":"keywords","content":"Java, 基本数据类型, 缓存池, 内存优化, 缓存池原理, 缓存池应用, 缓存池实践"}]]},"headers":[],"relativePath":"backend/tobetter/basic-extra-meal/int-cache.md","filePath":"backend/tobetter/basic-extra-meal/int-cache.md"}'),t={name:"backend/tobetter/basic-extra-meal/int-cache.md"},h=n("",46),l=[h];function k(e,p,r,F,g,d){return a(),i("div",null,l)}const o=s(t,[["render",k]]);export{c as __pageData,o as default};
