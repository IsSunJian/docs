import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.K9vKjHgL.js";const n="/docs/assets/tree.BVcKI4hU.jpg",l="/docs/assets/tree1.BstXNzAZ.jpg",E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"home/tree.md","filePath":"home/tree.md"}'),e={name:"home/tree.md"},p=t('<p>一、开发中，经常碰到需要组装类似于菜单结构的数据：</p><img src="'+n+'"><p>现将基于java，后端组装树的代码分享出来。</p><p>①：先模拟全部数据，以常见的省市区为基础数据</p><img src="'+l+`"><p>②使用java代码递归组装树：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">    /**parentCode:定级父编码，treeList所有数据*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">AreaVO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> getChildren</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> parentCode,</span><span style="--shiki-light:#24292E;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">AreaVO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> treeList){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">        List</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F6F6F4;">AreaVO</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&gt; list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;--shiki-light-font-weight:inherit;--shiki-dark-font-weight:bold;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> ArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">        treeList.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">((resource)</span><span style="--shiki-light:#D73A49;--shiki-dark:#97E1F1;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(Objects.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(parentCode,resource.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">getParentAreaCode</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">())){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">                resource.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">setChildList</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">getChildren</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(resource.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">getAreaCode</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(),treeList));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">                list.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(resource);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">        });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> list;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">    }</span></span></code></pre></div><p>以上便是组装树，下面是打开树</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span>    private List&lt;AreaVO&gt; forTree(List&lt;AreaVO&gt; children,List&lt;AreaVO&gt; allLists){</span></span>
<span class="line"><span>        for (AreaVO child : children) {</span></span>
<span class="line"><span>            allLists.add(child);</span></span>
<span class="line"><span>            if(CollUtil.isNotEmpty(child.getChildList())){</span></span>
<span class="line"><span>                System.out.println(&quot;递归子节点&quot;);</span></span>
<span class="line"><span>                forTree(child.getChildList(),allLists);</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        return allLists;</span></span>
<span class="line"><span>    }</span></span></code></pre></div><p>以上便是全部代码，或许还有更加简便的方式，欢迎指正和补充</p>`,10),h=[p];function k(r,d,F,g,c,o){return a(),i("div",null,h)}const C=s(e,[["render",k]]);export{E as __pageData,C as default};
