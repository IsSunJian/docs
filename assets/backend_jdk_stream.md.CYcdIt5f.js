import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.K9vKjHgL.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"backend/jdk/stream.md","filePath":"backend/jdk/stream.md"}'),t={name:"backend/jdk/stream.md"},h=n(`<h2 id="创建-stream" tabindex="-1">创建 Stream <a class="header-anchor" href="#创建-stream" aria-label="Permalink to &quot;创建 Stream&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span>	List&lt;Employee&gt; emps = Arrays.asList(</span></span>
<span class="line"><span>			new Employee(102, &quot;李四&quot;, 59, 6666.66, Status.BUSY),</span></span>
<span class="line"><span>			new Employee(101, &quot;张三&quot;, 18, 9999.99, Status.FREE),</span></span>
<span class="line"><span>			new Employee(103, &quot;王五&quot;, 28, 3333.33, Status.VOCATION),</span></span>
<span class="line"><span>			new Employee(104, &quot;赵六&quot;, 8, 7777.77, Status.BUSY),</span></span>
<span class="line"><span>			new Employee(104, &quot;赵六&quot;, 8, 7777.77, Status.FREE),</span></span>
<span class="line"><span>			new Employee(104, &quot;赵六&quot;, 8, 7777.77, Status.FREE),</span></span>
<span class="line"><span>			new Employee(105, &quot;田七&quot;, 38, 5555.55, Status.BUSY)</span></span>
<span class="line"><span>	);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">//1.</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Collection</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 提供了两个方法</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">  stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">() </span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">与</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> parallelStream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">List&lt;String&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> list</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> ArrayList</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&lt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Stream&lt;String&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> stream</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> list.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(); </span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">//获取一个顺序流</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Stream&lt;String&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> parallelStream</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> list.parallelStream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(); </span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">//获取一个并行流</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">//2.</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 通过</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Arrays</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 中的</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">() </span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">获取一个数组流</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Integer[]</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> nums</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Integer[</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">10</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Stream&lt;Integer&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> stream1</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Arrays.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">nums</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">//3.</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 通过</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Stream</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 类中静态方法</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> of</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Stream&lt;Integer&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> stream2</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Stream.of</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">1,2,3,4,5,6</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">//4.</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 创建无限流</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">//迭代</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Stream&lt;Integer&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> stream3</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Stream.iterate</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">0,</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (x) -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> x</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">).limit(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">stream3.forEach(System.out::println</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">//生成</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Stream&lt;Double&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> stream4</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Stream.generate</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Math::random</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.limit</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">stream4.forEach(System.out::println</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span></code></pre></div><h2 id="中间操作" tabindex="-1">中间操作 <a class="header-anchor" href="#中间操作" aria-label="Permalink to &quot;中间操作&quot;">​</a></h2><h3 id="筛选与切片" tabindex="-1">筛选与切片 <a class="header-anchor" href="#筛选与切片" aria-label="Permalink to &quot;筛选与切片&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">filter——接收</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Lambda</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> ，</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 从流中排除某些元素。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">limit——截断流，使其元素不超过给定数量。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">skip(n</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) —— 跳过元素，返回一个扔掉了前 n 个元素的流。若流中元素不足 n 个，则返回一个空流。与 limit(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">n</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) 互补</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">distinct——筛选，通过流所生成元素的</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> hashCode</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">() </span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">和</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> equals</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">() </span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">去除重复元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">	</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    //内部迭代：迭代操作</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Stream</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> API</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 内部完成</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    //外部迭代</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">	@Test</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">	public</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> void</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> test3</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">		Iterator&lt;Employee&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> it</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.iterator</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		while(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">it.hasNext</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()){</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">			System.out.println(it.next(</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">	</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">	//所有的中间操作不会做任何的处理</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">		Stream&lt;Employee&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> stream</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">			.filter((e</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">				System.out.println(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">&quot;测试中间操作&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">				return</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> e.getAge</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 35</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">			});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    //只有当做终止操作时，所有的中间操作会一次性的全部执行，称为“惰性求值”</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    stream.forEach(System.out::println</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">().filter((e) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">            System.out.println(&quot;短路！&quot;); // &amp;&amp;  ||</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">            return</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> e.getSalary</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 5000</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">        }).limit(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">).forEach(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">System.out::println</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    emps.parallelStream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">().filter((e) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> e.getSalary() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 5000</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">).skip(</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">).forEach(System.out</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">println);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">    emps.stream().distinct().forEach(System.out::println);</span></span></code></pre></div><h3 id="映射" tabindex="-1">映射 <a class="header-anchor" href="#映射" aria-label="Permalink to &quot;映射&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   		</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">   		map——接收</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Lambda</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> ,</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 将元素转换成其他形式或提取信息。接收一个函数作为参数,该函数会被应用到每个元素上,并将其映射成一个新的元素。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">   		flatMap——接收一个函数作为参数,将流中的每个值都换成另一个流,然后把所有流连接成一个流</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">   		Stream&lt;String&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> str</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.map</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">((e) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> e.getName());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   	</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">   		List&lt;String&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> strList</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Arrays.asList</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">&quot;aaa&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">bbb</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">ccc</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">ddd</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">eee</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">   		Stream&lt;String&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> stream</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> strList.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.map</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">String::toUpperCase</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">   		Stream&lt;Stream&lt;Character&gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> stream2</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> strList.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.map</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">TestStreamAPI1::filterCharacter</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   	</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">   		stream2.forEach((sm</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">sm.forEach(System.out::println</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   	</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">   		Stream&lt;Character&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> stream3</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> strList.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">() </span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.flatMap</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">TestStreamAPI1::filterCharacter</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   	}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">   	public</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> static</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Stream</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">Characte</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> filterCharacter</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">String</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> str</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">   		List&lt;Character&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> list</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> ArrayList</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&lt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">   		for</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Character</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> ch</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> str.toCharArray</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">   			list.add(ch</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   		}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">   		return</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> list.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   	}</span></span></code></pre></div><h3 id="排序" tabindex="-1">排序 <a class="header-anchor" href="#排序" aria-label="Permalink to &quot;排序&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">sorted</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()——自然排序</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">sorted(Comparator</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> com</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)——定制排序</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">   		emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   			.map(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Employee::getName</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">   			.sorted</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   			.forEach(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">System.out::println</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">   	//-----------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">   		emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   			.sorted((</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">x,</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> y</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   				if(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">x.getAge</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">() == y.getAge()){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">   					return</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> x.getName</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.compareTo</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">y.getName</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   				}else{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">   					return</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Integer.compare</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">x.getAge</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">y.getAge</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   				}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">   			}).forEach(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">System.out::println</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span></code></pre></div><h2 id="终止操作" tabindex="-1">终止操作 <a class="header-anchor" href="#终止操作" aria-label="Permalink to &quot;终止操作&quot;">​</a></h2><h3 id="allmatch——检查是否匹配所有元素" tabindex="-1">allMatch——检查是否匹配所有元素 <a class="header-anchor" href="#allmatch——检查是否匹配所有元素" aria-label="Permalink to &quot;allMatch——检查是否匹配所有元素&quot;">​</a></h3><h3 id="anymatch——检查是否至少匹配一个元素" tabindex="-1">anyMatch——检查是否至少匹配一个元素 <a class="header-anchor" href="#anymatch——检查是否至少匹配一个元素" aria-label="Permalink to &quot;anyMatch——检查是否至少匹配一个元素&quot;">​</a></h3><h3 id="nonematch——检查是否没有匹配的元素" tabindex="-1">noneMatch——检查是否没有匹配的元素 <a class="header-anchor" href="#nonematch——检查是否没有匹配的元素" aria-label="Permalink to &quot;noneMatch——检查是否没有匹配的元素&quot;">​</a></h3><h3 id="findfirst——返回第一个元素" tabindex="-1">findFirst——返回第一个元素 <a class="header-anchor" href="#findfirst——返回第一个元素" aria-label="Permalink to &quot;findFirst——返回第一个元素&quot;">​</a></h3><h3 id="findany——返回当前流中的任意元素" tabindex="-1">findAny——返回当前流中的任意元素 <a class="header-anchor" href="#findany——返回当前流中的任意元素" aria-label="Permalink to &quot;findAny——返回当前流中的任意元素&quot;">​</a></h3><h3 id="count——返回流中元素的总个数" tabindex="-1">count——返回流中元素的总个数 <a class="header-anchor" href="#count——返回流中元素的总个数" aria-label="Permalink to &quot;count——返回流中元素的总个数&quot;">​</a></h3><h3 id="max——返回流中最大值" tabindex="-1">max——返回流中最大值 <a class="header-anchor" href="#max——返回流中最大值" aria-label="Permalink to &quot;max——返回流中最大值&quot;">​</a></h3><h3 id="min——返回流中最小值" tabindex="-1">min——返回流中最小值 <a class="header-anchor" href="#min——返回流中最小值" aria-label="Permalink to &quot;min——返回流中最小值&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    allMatch——检查是否匹配所有元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    anyMatch——检查是否至少匹配一个元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    noneMatch——检查是否没有匹配的元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    findFirst——返回第一个元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    findAny——返回当前流中的任意元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    count——返回流中元素的总个数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    max——返回流中最大值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    min——返回流中最小值</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    boolean</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> bl</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.allMatch</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">((e) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> e.getStatus().equals(Status.BUSY));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    boolean</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> bl1</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.anyMatch</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">((e) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> e.getStatus().equals(Status.BUSY));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    boolean</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> bl2</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.noneMatch</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">((e) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> e.getStatus().equals(Status.BUSY));		</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">	</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    Optional&lt;Employee&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> op</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.sorted</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">((e</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> e</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> Double.compare(e</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">.getSalary()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> e</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">.getSalary()))</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">.findFirst</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">	Optional&lt;Employee&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> op2</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.parallelStream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.filter</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">((e) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> e.getStatus().equals(Status.FREE))</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.findAny</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">	long</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> count</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.filter</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">((e) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> e.getStatus().equals(Status.FREE))</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.count</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">	Optional&lt;Double&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> op</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.map</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Employee::getSalary</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.max</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Double::compare</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">				</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">	Optional&lt;Employee&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> op2</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.min</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">((e</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> e</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> Double.compare(e</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">.getSalary()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> e</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">.getSalary()));</span></span></code></pre></div><h3 id="规约" tabindex="-1">规约 <a class="header-anchor" href="#规约" aria-label="Permalink to &quot;规约&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">归约</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">reduce(T</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> identity,</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> BinaryOperator</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) / reduce(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">BinaryOperator</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) ——可以将流中元素反复结合起来，得到一个值。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">		List&lt;Integer&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> list</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Arrays.asList</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">1,2,3,4,5,6,7,8,9,10</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">		Integer</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> sum</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> list.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.reduce</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">0,</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> (x, </span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> x</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> y</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">		Optional&lt;Double&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> op</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.map</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Employee::getSalary</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.reduce</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Double::sum</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">	//需求：搜索名字中</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> “六”</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 出现的次数</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">		Optional&lt;Integer&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> sum</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">			.map(Employee::getName</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">			.flatMap(TestStreamAPI1::filterCharacter</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">			.map((ch</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">				if(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">ch.equals(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">&#39;六&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">					return</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">				else</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">					return</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">			}).reduce(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Integer::sum</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">);</span></span></code></pre></div><h3 id="收集" tabindex="-1">收集 <a class="header-anchor" href="#收集" aria-label="Permalink to &quot;收集&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">//collect——将流转换为其他形式。接收一个</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Collector接口的实现,用于给Stream中元素做汇总的方法</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">		List&lt;String&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> list</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.map</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Employee::getName</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.collect</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Collectors.toList</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">		Set&lt;String&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.map</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Employee::getName</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.collect</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Collectors.toSet</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">			</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">		HashSet&lt;String&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> hs</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.map</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Employee::getName</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.collect</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Collectors.toCollection(HashSet::new</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">		Optional&lt;Double&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> max</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.map</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Employee::getSalary</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.collect</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Collectors.maxBy(Double::compare</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">		Optional&lt;Employee&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> op</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.collect</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Collectors.minBy((e1,</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> e2</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Double.compare</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">e1.getSalary</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">,e2.getSalary</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">())));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">		Double</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> sum</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.collect</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Collectors.summingDouble(Employee::getSalary</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">		Double</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> avg</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.collect</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Collectors.averagingDouble(Employee::getSalary</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">		Long</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> count</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.collect</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Collectors.counting</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">		DoubleSummaryStatistics</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> dss</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.collect</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Collectors.summarizingDouble(Employee::getSalary</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">	</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">	//分组</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">	Map&lt;Status,</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">Employe</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> map</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.collect</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Collectors.groupingBy(Employee::getStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">		</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">	//多级分组</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    Map&lt;Status,</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Map</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">String,</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">Employe</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">e&gt;&gt;&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">map</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">        .collect(Collectors.groupingBy(Employee::getStatus,</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> Collectors.groupingBy</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">((e) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">            if(e.getAge() &gt;= 60)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">                return</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">老年</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">            else</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> if(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">e.getAge</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">() &gt;= 35)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">                return</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">中年</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">            else</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">                return</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">成年</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">        })));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">	</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">	//分区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    Map&lt;Boolean,</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">Employe</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> map</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">.collect</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">Collectors.partitioningBy((e</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">) -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> e.getSalary</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 5000</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    String</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> str</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">        .map(Employee::getName</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">        .collect(Collectors.joining(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">&quot;,&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> ,</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">----</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">----</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">    Optional&lt;Double&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> sum</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> emps.stream</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">        .map(Employee::getSalary</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">        .collect(Collectors.reducing(Double::sum</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">));</span></span></code></pre></div>`,24),l=[h];function k(p,e,E,F,r,g){return a(),i("div",null,l)}const c=s(t,[["render",k]]);export{y as __pageData,c as default};
