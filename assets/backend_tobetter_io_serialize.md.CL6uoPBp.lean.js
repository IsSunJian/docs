import{_ as i,c as s,o as a,a4 as t}from"./chunks/framework.-JfgED0h.js";const n="/docs/assets/serialize-20230323105551.Ca1fAgA0.png",c=JSON.parse('{"title":"Java 序列流：Java 对象的序列化和反序列化","description":"本文详细介绍了 Java 序列流在对象序列化和反序列化中的重要作用，阐述了其如何有效地将 Java 对象持久化存储和恢复。同时，文章还提供了序列流的实际应用示例和常用方法。阅读本文，将帮助您更深入地了解 Java 序列流以及其在 Java 编程中的关键地位，提高数据持久化和恢复的效率。","frontmatter":{"title":"Java 序列流：Java 对象的序列化和反序列化","shortTitle":"序列流(序列化和反序列化)","category":["Java核心"],"tag":["Java IO"],"description":"本文详细介绍了 Java 序列流在对象序列化和反序列化中的重要作用，阐述了其如何有效地将 Java 对象持久化存储和恢复。同时，文章还提供了序列流的实际应用示例和常用方法。阅读本文，将帮助您更深入地了解 Java 序列流以及其在 Java 编程中的关键地位，提高数据持久化和恢复的效率。","head":[["meta",{"name":"keywords","content":"Java,Java IO,序列化流,java序列化,java反序列化,ObjectOutputStream,ObjectInputStream,java 序列流"}]]},"headers":[],"relativePath":"backend/tobetter/io/serialize.md","filePath":"backend/tobetter/io/serialize.md"}'),h={name:"backend/tobetter/io/serialize.md"},l=t("",38),k=[l];function e(p,r,F,d,g,y){return a(),s("div",null,k)}const E=i(h,[["render",e]]);export{c as __pageData,E as default};
