import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.K9vKjHgL.js";const n="/docs/assets/fanshe-01.DAI83oOR.png",h="/docs/assets/fanshe-02.Cqm1cyAy.png",l="/docs/assets/fanshe-03.DYLk1r7P.png",k="/docs/assets/fanshe-04.BcAh12qy.png",f=JSON.parse('{"title":"Java 反射详解：动态创建实例、调用方法和访问字段","description":"Java 反射机制允许在运行时检查和操作类、对象、方法和字段。通过反射，我们可以动态创建对象实例、调用方法、访问字段和获取类的元数据。本文介绍了 Java 反射的基本概念、应用场景和示例。","frontmatter":{"title":"Java 反射详解：动态创建实例、调用方法和访问字段","shortTitle":"掌握 Java 反射","category":["Java核心"],"tag":["Java重要知识点"],"description":"Java 反射机制允许在运行时检查和操作类、对象、方法和字段。通过反射，我们可以动态创建对象实例、调用方法、访问字段和获取类的元数据。本文介绍了 Java 反射的基本概念、应用场景和示例。","author":"沉默王二","head":[["meta",{"name":"keywords","content":"Java,java 反射, 运行时, 类, 对象, 方法, 字段, 反射,动态调用"}]]},"headers":[],"relativePath":"backend/tobetter/basic-extra-meal/fanshe.md","filePath":"backend/tobetter/basic-extra-meal/fanshe.md"}'),p={name:"backend/tobetter/basic-extra-meal/fanshe.md"},e=t("",99),r=[e];function F(d,g,y,o,c,E){return a(),i("div",null,r)}const u=s(p,[["render",F]]);export{f as __pageData,u as default};
