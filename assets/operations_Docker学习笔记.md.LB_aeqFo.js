import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.-JfgED0h.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"operations/Docker学习笔记.md","filePath":"operations/Docker学习笔记.md"}'),h={name:"operations/Docker学习笔记.md"},l=n(`<h2 id="一、解决痛点" tabindex="-1">一、解决痛点 <a class="header-anchor" href="#一、解决痛点" aria-label="Permalink to &quot;一、解决痛点&quot;">​</a></h2><ol><li>环境不一致</li><li>版本不一样</li><li>配置不一致，配置费力费时</li></ol><blockquote><p>把源码+配置+环境+版本打包成镜像，装载在Dokcer容器引擎上，达到跨平台无缝接轨运作。 一次镜像，处处运行，从搬家到搬楼。</p></blockquote><h2 id="二、优点和应用" tabindex="-1">二、优点和应用 <a class="header-anchor" href="#二、优点和应用" aria-label="Permalink to &quot;二、优点和应用&quot;">​</a></h2><ol><li>便捷升级和快速扩容</li><li>更简单的系统运维</li><li>镜像小、更高效的计算资源</li><li>更快的应用交付和平缓迁移</li><li>利用宿主机内核，不需要加载操作系统OS内核</li></ol><h2 id="三、基本组成" tabindex="-1">三、基本组成 <a class="header-anchor" href="#三、基本组成" aria-label="Permalink to &quot;三、基本组成&quot;">​</a></h2><ol><li>镜像：一个只读的模板，用于创建容器，一个镜像可以创建多个容器。</li><li>容器：镜像创建出来的虚拟化运行环境容器实例（简易的Linux环境）。</li><li>仓库：集中存放镜像的场所，分为公开库和私有库。</li></ol><h2 id="四、工作原理" tabindex="-1">四、工作原理 <a class="header-anchor" href="#四、工作原理" aria-label="Permalink to &quot;四、工作原理&quot;">​</a></h2><p><img src="https://zerdocs.oss-cn-shanghai.aliyuncs.com/febasis/202302032203456.png" alt=""><img src="https://zerdocs.oss-cn-shanghai.aliyuncs.com/febasis/202302032204209.png" alt=""></p><h2 id="五、centos安装docker" tabindex="-1">五、CentOS安装Docker <a class="header-anchor" href="#五、centos安装docker" aria-label="Permalink to &quot;五、CentOS安装Docker&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> yum-utils</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">yum-config-manager</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --add-repo</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> docker-ce</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> docker-ce-cli</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> containerd.io</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> docker-compose-plugin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> docker</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -ef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> hello-world</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #测试</span></span></code></pre></div><h2 id="六、阿里云镜像加速" tabindex="-1">六、阿里云镜像加速 <a class="header-anchor" href="#六、阿里云镜像加速" aria-label="Permalink to &quot;六、阿里云镜像加速&quot;">​</a></h2><p><a href="https://blog.csdn.net/weixin_45764765/article/details/128367219" target="_blank" rel="noreferrer">参考教程</a></p><h2 id="七、常用命令" tabindex="-1">七、常用命令 <a class="header-anchor" href="#七、常用命令" aria-label="Permalink to &quot;七、常用命令&quot;">​</a></h2><h3 id="_1-docker" tabindex="-1">1. Docker <a class="header-anchor" href="#_1-docker" aria-label="Permalink to &quot;1. Docker&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> docker</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #开机启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> system</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> df</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #负载查看</span></span></code></pre></div><h3 id="_2-镜像" tabindex="-1">2. 镜像 <a class="header-anchor" href="#_2-镜像" aria-label="Permalink to &quot;2. 镜像&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> images</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #展示本地镜像 -a 所有，-q只显示ID</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> search</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> mongo</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #搜索镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> search</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> redis</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> 5</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #展示Stars排名前五条</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 镜像名[:TAG]</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">  #下载镜像，没有版本号默认最新</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> rmi</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> hello-world</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #强制删除镜像</span></span></code></pre></div><blockquote><p>虚悬镜像：构建或删除过程中产生的仓库名和标签都为none的镜像，没啥用建议删除 <code>docker image ls -f dangling=true</code> 删除：<code>docker image prune</code></p></blockquote><p><strong>生成新镜像</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">agt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">apt-get</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> vim</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -m=</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">vim is ok</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -a=</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">fxj</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 容器id</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> myubt:1.1</span></span></code></pre></div><p><strong>本地镜像推送到阿里云</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#发布和拉取</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> login</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --username=yunzhishangfxj</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> registry.cn-hangzhou.aliyuncs.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> tag</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> [ImageId] registry.cn-hangzhou.aliyuncs.com/fanxj/mubt:[镜像版本号]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> registry.cn-hangzhou.aliyuncs.com/fanxj/mubt:[镜像版本号]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> registry.cn-hangzhou.aliyuncs.com/fanxj/mubt:1.1</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">  /bin/bash</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #记得带版本</span></span></code></pre></div><p><img src="https://zerdocs.oss-cn-shanghai.aliyuncs.com/febasis/202302032206243.png" alt=""></p><h3 id="_3-容器" tabindex="-1">3. 容器 <a class="header-anchor" href="#_3-容器" aria-label="Permalink to &quot;3. 容器&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> ps</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #列出正在运行容器 -a -s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --name=</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">ub01</span><span style="--shiki-light:#032F62;--shiki-dark:#DEE492;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">  ubuntu</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> /bin/bash</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#-p: 外部主机端口:docker容器端口 -P:随机分配主机端口映射到内部容器端口</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#-i:交互式 -t:输出伪终端 -d:后台运行 --name=&quot;容器名&quot; /bin/bash:指定命令解释器</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#97E1F1;">exit</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #退出，ctrl+q+p:退出但不停止</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 容器id</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> /bin/bash</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #重新进容器，exit退出不会停止容器</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 容器id或容器名</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> restart</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> stop</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> kill</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #强制停止</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 容器id或容器名</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #删除已停止容器 、未停止 -f 强制删除</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> rm</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> ps </span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;">-a</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -q</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> xargs</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> rm</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #一次性删除多个再运行的</span></span></code></pre></div><h4 id="启动守护式" tabindex="-1">启动守护式 <a class="header-anchor" href="#启动守护式" aria-label="Permalink to &quot;启动守护式&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -it</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #前台交互启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -d</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">  #后台守护启动</span></span></code></pre></div><h4 id="查看容器日志" tabindex="-1">查看容器日志 <a class="header-anchor" href="#查看容器日志" aria-label="Permalink to &quot;查看容器日志&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> logs</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 容器id</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #查看容器日志</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> inspect</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">  容器id</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #查看容器内部细节</span></span></code></pre></div><h4 id="容器备份到主机" tabindex="-1">容器备份到主机 <a class="header-anchor" href="#容器备份到主机" aria-label="Permalink to &quot;容器备份到主机&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 容器id:容器文件路径</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 目的主机路径</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">  #备份文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> export</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 容器id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> xxx.tar</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">	 #备份整个容器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> ub.tar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> import</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 恢复后的镜像名</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">  #从tar包中恢复成镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">  镜像id</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> /bin/bash</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #重新恢复容器</span></span></code></pre></div><h4 id="容器卷" tabindex="-1">容器卷 <a class="header-anchor" href="#容器卷" aria-label="Permalink to &quot;容器卷&quot;">​</a></h4><h2 id="八、dockerfile编写" tabindex="-1">八、<a href="https://docs.docker.com/engine/reference/builder/#from" target="_blank" rel="noreferrer">Dockerfile</a>编写 <a class="header-anchor" href="#八、dockerfile编写" aria-label="Permalink to &quot;八、[Dockerfile](https://docs.docker.com/engine/reference/builder/#from)编写&quot;">​</a></h2><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#基础镜像，基于什么镜像什么版本作为模版 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">From</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> xxx:1.1 </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#构建参数，运行时无效，可以构建时候临时修改变量（docker build --build-arg B=10）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">ARG</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#定义运行时环境变量，运行时一直生效后续可以引用， ARG变量可以传递给ENV</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> NGINX_HOME /usr/local/nginx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#指定进入容器后的默认工作目录（落脚点）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> $NGINX_HOME</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#将宿主机的文件拷贝到镜像</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> &lt;src&gt;  &lt;dest&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#将主机目录下的文件拷贝到镜像，且会自动处理URL和解压tar压缩包</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#Dockerfile构建时运行(docker build)， </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#容器启动后(docker run)执行的脚本，多个命令时只会生效最后一个???</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#会被docker run之后的参数替换(/bin/bash)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">CMD</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">  [</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">&quot;/etc/nginx/nginx.conf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#类似CMD,但是不会(docker run)后面命令覆盖，而且可以接收CMD传的参数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">ENTRYPOINT</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">&quot;nginx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">&quot;-c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">] ==&gt; nginx -c /etc/nginx/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#docker run nginx:test -c /etc/nginx/new.conf ==&gt; nginx -c /etc/nginx/new.conf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">一般语句为：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> WORKDIR COPY-ADD RUN CMD-ENTRYPOINT</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#暴露镜像的指定端口</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">EXPOSE</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> 9999</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#指定容器卷</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">VOLUME</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">&quot;/var/www&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">&quot;/var/log/apache2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;">&quot;/etc/apache2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#指定元数据，标识容器便于查找</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">LABEL</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#当前镜像构建的时候不会执行，基于当前镜像的镜像去构建的时候才会在FROM后执行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">ONBUILD </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#指定容器使用什么信号，一般指定信号名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">STOPSIGNAL</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#检查容易的健康状态</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">HEALTHCHECK</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#指定命令解释器 linux为/bin/sh，windows为cmd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">SHELL</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#用于指定RUN CMD等指令运行时的用户身份，不指定是root(用户名:用户组 或 USER 用户id:组id)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;">USER</span></span></code></pre></div><h2 id="九、docker网络" tabindex="-1">九、Docker网络 <a class="header-anchor" href="#九、docker网络" aria-label="Permalink to &quot;九、Docker网络&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> network</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> ls</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #查看网络</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> network</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> inspect</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 网络名</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #查看网络源数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> network</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 网络名</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #删除网络</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> network</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 网络名</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #新建网络</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> network</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> inspect</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> bridge</span><span style="--shiki-light:#D73A49;--shiki-dark:#F286C4;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> docker0</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #查看网卡信息</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"># --network 不指定默认就是网桥模式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#host主机模式(不能指定端口，共享宿主机的ip，没有自己的ip，http://宿主机ip:端口)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --network</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> host</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 容器名</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 镜像名</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --network</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> none</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 容器名</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 镜像名</span><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;"> #只有lo网卡</span></span></code></pre></div><h4 id="共用网卡" tabindex="-1">共用网卡 <a class="header-anchor" href="#共用网卡" aria-label="Permalink to &quot;共用网卡&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --network</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> container:另一个容器名</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 容器名</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> /bin/bash</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 镜像名</span><span style="--shiki-light:#24292E;--shiki-dark:#F6F6F4;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#共用的容器关闭，这个容器网卡也没有啦</span></span></code></pre></div><h4 id="自定义网络" tabindex="-1">自定义网络 <a class="header-anchor" href="#自定义网络" aria-label="Permalink to &quot;自定义网络&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#启动两个网桥模式容器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 8081:8080</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> tomcat81</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> tomcat</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 8082:8080</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> tomcat82</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> tomcat</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#两个ip可以相互ping通，痛点：按域名ping不通</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 8081:8080</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --network</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> my_network</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> tomcat81</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> tomcat</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> 8082:8080</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --network</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> my_network</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> tomcat82</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> tomcat</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7B7F8B;">#ip、域名互ping都能通（维护好主机和ip的关系）</span></span></code></pre></div><h2 id="十、容器编排" tabindex="-1">十、<a href="https://docs.docker.com/compose/compose-file/" target="_blank" rel="noreferrer">容器编排</a> <a class="header-anchor" href="#十、容器编排" aria-label="Permalink to &quot;十、[容器编排](https://docs.docker.com/compose/compose-file/)&quot;">​</a></h2><blockquote><p>意义：集中快速管理多个容器</p></blockquote><h4 id="_1-安装compose" tabindex="-1">1. <a href="https://docs.docker.com/compose/install/" target="_blank" rel="noreferrer">安装Compose</a> <a class="header-anchor" href="#_1-安装compose" aria-label="Permalink to &quot;1. [安装Compose](https://docs.docker.com/compose/install/)&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light dracula-soft vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#62E884;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -SL</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> https://github.com/docker/compose/releases/download/v2.14.2/docker-compose-linux-x86_64</span><span style="--shiki-light:#005CC5;--shiki-dark:#BF9EEE;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#E7EE98;"> /usr/local/bin/docker-compose</span></span></code></pre></div><h4 id="_2-常用命令" tabindex="-1">2. <a href="https://cloud.tencent.com/developer/article/1499032" target="_blank" rel="noreferrer">常用命令</a> <a class="header-anchor" href="#_2-常用命令" aria-label="Permalink to &quot;2. [常用命令](https://cloud.tencent.com/developer/article/1499032)&quot;">​</a></h4><p><img src="https://zerdocs.oss-cn-shanghai.aliyuncs.com/febasis/202302032205681.png" alt=""></p><h4 id="_3-安装-portainer" tabindex="-1">3. <a href="https://cloud.tencent.com/developer/article/2047779" target="_blank" rel="noreferrer">安装 Portainer</a> <a class="header-anchor" href="#_3-安装-portainer" aria-label="Permalink to &quot;3. [安装 Portainer](https://cloud.tencent.com/developer/article/2047779)&quot;">​</a></h4>`,49),k=[l];function t(p,e,r,d,E,c){return a(),i("div",null,k)}const F=s(h,[["render",t]]);export{g as __pageData,F as default};
