import{_ as k,D as l,c as p,l as s,I as h,w as n,a4 as i,o as e,a as t}from"./chunks/framework.-JfgED0h.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/js/es6学习笔记.md","filePath":"frontend/js/es6学习笔记.md"}'),F={name:"frontend/js/es6学习笔记.md"},d=i("",120),r=i("",18),g=s("p",null,"注意修改原型，“类”的原始定义，影响到所有实例",-1),y=i("",16);function E(o,c,C,u,D,A){const a=l("font");return e(),p("div",null,[d,s("blockquote",null,[h(a,{color:"red"},{default:n(()=>[t("**无法中途取消**")]),_:1})]),r,s("blockquote",null,[h(a,{color:"red"},{default:n(()=>[t("`__proto__` 并不是语言本身的特性，这是各大厂商具体实现时添加的私有属性，虽然目前很多现代浏览器的 JS 引擎中都提供了这个私有属性，但依旧不建议在生产中使用该属性，避免对环境产生依赖。生产环境中，我们可以使用 **`Object.getPrototypeOf`** 方法来获取实例对象的原型，然后再来为原型添加方法/属性。")]),_:1}),g]),y])}const f=k(F,[["render",E]]);export{b as __pageData,f as default};
